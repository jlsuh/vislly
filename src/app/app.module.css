@layer components {
  :root:has(.input:checked) {
    overflow: hidden;
    scrollbar-width: none;
  }

  .burgerIcon,
  .closeIcon {
    height: 1.33rem;
    stroke: var(--color-on-surface);
    width: 1.33rem;
  }

  .burgerIcon,
  .input:checked ~ .closeIcon {
    display: block;
  }

  .content {
    flex-direction: column;
    flex: 1;
    margin: 0 auto;
    max-width: 50rem;
    padding: 1.25rem;
  }

  .header,
  .sidebar {
    background-color: var(--color-surface-container-low);
  }

  .sidebar {
    --top-offset: calc(4rem + 8px);
    height: calc(100vh - var(--top-offset));
    overflow-y: auto;
    position: fixed;
    width: 100vw;
    z-index: 1;
  }

  .sidebar,
  .input:checked ~ .burgerIcon,
  .closeIcon {
    display: none;
  }

  .content,
  .main,
  .header:has(.input:checked) ~ .main > .sidebar,
  .headerContainer,
  .leftContainer,
  .rightContainer {
    display: flex;
  }

  .footer {
    padding: 2rem;
  }

  .header {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    width: 100%;
    z-index: 2;
  }

  .header:has(.input:checked) {
    border-bottom: 1px solid var(--color-outline-variant);
  }

  .header:has(.input:checked) ~ .footer,
  .header:has(.input:checked) ~ .main > .content {
    opacity: 0;
  }

  .headerContainer {
    container: headerContainer / inline-size;
    flex-direction: row;
    justify-content: space-between;
    padding: 0.75rem 1.25rem;
  }

  .headerContainer,
  .sidebarList {
    height: fit-content;
  }

  .label {
    display: inline-flex;
  }

  .leftContainer {
    gap: 0.5rem;
  }

  .leftContainer,
  .rightContainer {
    align-items: center;
    justify-content: center;
  }

  .sidebarList {
    width: inherit;
  }

  /**
   * Prevent @container stacking context
   */
  @media (width >= 48rem) {
    :root:has(.input:checked) {
      overflow: unset;
      scrollbar-width: unset;
    }

    .header:has(.input:checked) ~ .footer,
    .header:has(.input:checked) ~ .main > .content {
      opacity: unset;
    }

    .header:has(.input:checked) ~ .main > .content {
      position: unset;
    }

    .header:has(.input:checked) ~ .main > .content,
    .sidebar {
      height: unset;
    }

    .label {
      display: none;
    }

    .main {
      gap: 1rem;
    }

    .sidebar {
      display: unset;
    }

    .sidebar {
      flex-basis: 14rem;
      max-height: calc(100vh - var(--top-offset));
      position: -webkit-sticky;
      position: sticky;
      top: var(--top-offset);
      width: unset;
    }

    .sidebarList {
      width: 100%;
    }
  }
}
